[{"/Users/knine/projects/shopify/src/index.js":"1","/Users/knine/projects/shopify/src/App.js":"2","/Users/knine/projects/shopify/src/Search.js":"3","/Users/knine/projects/shopify/src/Movies.js":"4","/Users/knine/projects/shopify/src/Nominated.js":"5","/Users/knine/projects/shopify/src/Footer.js":"6"},{"size":432,"mtime":1610363446064,"results":"7","hashOfConfig":"8"},{"size":214,"mtime":1610547874703,"results":"9","hashOfConfig":"8"},{"size":2437,"mtime":1610557398373,"results":"10","hashOfConfig":"8"},{"size":1159,"mtime":1610537898900,"results":"11","hashOfConfig":"8"},{"size":951,"mtime":1610538255992,"results":"12","hashOfConfig":"8"},{"size":282,"mtime":1610547440343,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14hw2u2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/knine/projects/shopify/src/index.js",[],["29","30"],"/Users/knine/projects/shopify/src/App.js",[],"/Users/knine/projects/shopify/src/Search.js",[],"/Users/knine/projects/shopify/src/Movies.js",["31"],"import React from \"react\";\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\n\n\nconst Movies = ({ movies, nominateMovies, loading, movieIds, isNotify }) => {\n  const movieLists = movies.map((movie, i) => {\n    const isNominated = movieIds.includes(movie.imdbID);\n    return (\n      <div key={i} className=\"movie-card\">\n        <div className='movie'>\n          <img src={movie.Poster} alt=\"pics\" className=\"movie-pics\"/>\n          <div className=\"movie-title\">{movie.Title} ({movie.Year})</div>\n          <button\n           onClick={() =>{ nominateMovies(movie) \n            isNotify()      \n          }} \n           className={`${isNominated ? 'btn-gray' :' movie-btn'}`}\n           disabled = {isNominated}>\n            <span>Nominate</span>\n            </button>\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\n        </div>\n      </div>\n    );\n  })\n\t\n  return (\n    <div className=\"movie-container\">\n      {loading ? (<div className='loading'><h2 className='loader'></h2></div>) : <div className=\"movie-box\">{movieLists}</div>}\n    </div>\n  );\n};\n\nexport default Movies;\n","/Users/knine/projects/shopify/src/Nominated.js",[],["32","33"],"/Users/knine/projects/shopify/src/Footer.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":29,"column":44,"nodeType":"40","endLine":29,"endColumn":67},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["43"],["44"],"no-global-assign","no-unsafe-negation"]